(* Sieve of Eratosthenes implemented in CILA *)

let N := 100;

let isPrime[N+1] := { 0 };
let loop := 2;
while N >= loop do
    isPrime[loop] := 1;
    loop := loop + 1;
od

let prime := 2;

while N >= prime do
    let next := 2 * prime;
    if isPrime[prime] = 1 then
        while N >= next do
            isPrime[next] := 0;
            next := next + prime;
        od
    fi
    prime := prime + 1;
od
